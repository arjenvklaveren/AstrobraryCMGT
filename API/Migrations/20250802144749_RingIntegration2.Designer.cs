// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250802144749_RingIntegration2")]
    partial class RingIntegration2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Entities.Astronomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Astronomer");
                });

            modelBuilder.Entity("API.Entities.RingSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RingDetailColorHex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RingDistance")
                        .HasColumnType("int");

                    b.Property<string>("RingMainColorHex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RingSize")
                        .HasColumnType("int");

                    b.Property<string>("RingSubColorHex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpaceBodyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpaceBodyId")
                        .IsUnique();

                    b.ToTable("RingSystem");
                });

            modelBuilder.Entity("API.Entities.SpaceBody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("AtmosphereThickness")
                        .HasColumnType("int");

                    b.Property<int>("Diameter")
                        .HasColumnType("int");

                    b.Property<int>("DiscovererId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DiscoveryDate")
                        .HasColumnType("date");

                    b.Property<int>("DistanceFromParent")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Luminosity")
                        .HasColumnType("int");

                    b.Property<string>("MainColorHex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mass")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RotationAngle")
                        .HasColumnType("int");

                    b.Property<int>("RotationSpeed")
                        .HasColumnType("int");

                    b.Property<string>("SubColorHex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Temperature")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Velocity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiscovererId");

                    b.ToTable("SpaceBodies");
                });

            modelBuilder.Entity("API.Entities.RingSystem", b =>
                {
                    b.HasOne("API.Entities.SpaceBody", "SpaceBody")
                        .WithOne("RingSystem")
                        .HasForeignKey("API.Entities.RingSystem", "SpaceBodyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpaceBody");
                });

            modelBuilder.Entity("API.Entities.SpaceBody", b =>
                {
                    b.HasOne("API.Entities.Astronomer", "Discoverer")
                        .WithMany()
                        .HasForeignKey("DiscovererId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discoverer");
                });

            modelBuilder.Entity("API.Entities.SpaceBody", b =>
                {
                    b.Navigation("RingSystem");
                });
#pragma warning restore 612, 618
        }
    }
}
